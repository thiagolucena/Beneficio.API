// <auto-generated />
using System;
using Beneficio.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Beneficio.Infra.Data.Migrations
{
    [DbContext(typeof(BeneficioContext))]
    partial class BeneficioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Beneficio.Domain.Entities.AnexoBeneficio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeneficioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UrlAnexo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BeneficioId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("AnexoBeneficios");
                });

            modelBuilder.Entity("Beneficio.Domain.Entities.BeneficioServidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrgaoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServidorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SetorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrgaoId");

                    b.HasIndex("ServidorId");

                    b.HasIndex("SetorId");

                    b.ToTable("BeneficioServidores");
                });

            modelBuilder.Entity("Beneficio.Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Beneficio.Domain.Entities.MovimentacaoBeneficio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeneficioId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataTramitacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("SetorDestinoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SetorOrigemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BeneficioId");

                    b.HasIndex("SetorDestinoId");

                    b.HasIndex("SetorOrigemId");

                    b.ToTable("MovimentacaoBeneficios");
                });

            modelBuilder.Entity("Beneficio.Domain.Entities.Orgao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orgaos");
                });

            modelBuilder.Entity("Beneficio.Domain.Entities.Servidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Matricula")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Servidores");
                });

            modelBuilder.Entity("Beneficio.Domain.Entities.Setor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("Beneficio.Domain.Entities.AnexoBeneficio", b =>
                {
                    b.HasOne("Beneficio.Domain.Entities.BeneficioServidor", "Beneficio")
                        .WithMany("LstImagens")
                        .HasForeignKey("BeneficioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Beneficio.Domain.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficio");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Beneficio.Domain.Entities.BeneficioServidor", b =>
                {
                    b.HasOne("Beneficio.Domain.Entities.Orgao", "Orgao")
                        .WithMany()
                        .HasForeignKey("OrgaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Beneficio.Domain.Entities.Servidor", "Servidor")
                        .WithMany()
                        .HasForeignKey("ServidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Beneficio.Domain.Entities.Setor", "Setor")
                        .WithMany()
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orgao");

                    b.Navigation("Servidor");

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("Beneficio.Domain.Entities.MovimentacaoBeneficio", b =>
                {
                    b.HasOne("Beneficio.Domain.Entities.BeneficioServidor", "Beneficio")
                        .WithMany()
                        .HasForeignKey("BeneficioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Beneficio.Domain.Entities.Setor", "SetorDestino")
                        .WithMany()
                        .HasForeignKey("SetorDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Beneficio.Domain.Entities.Setor", "SetorOrigem")
                        .WithMany()
                        .HasForeignKey("SetorOrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficio");

                    b.Navigation("SetorDestino");

                    b.Navigation("SetorOrigem");
                });

            modelBuilder.Entity("Beneficio.Domain.Entities.BeneficioServidor", b =>
                {
                    b.Navigation("LstImagens");
                });
#pragma warning restore 612, 618
        }
    }
}
